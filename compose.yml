services:
  consumer:
    build: ./consumer
    ports:
      - 8081:8081
    command: --kafka.host kafka --kafka.port 19092
    depends_on:
      kafka:
        condition: service_healthy
  importer:
    build: ./importer
    command: --kafka.host kafka --kafka.port 19092 --clickhouse.host clickhouse --clickhouse.port 9000
    deploy:
      mode: replicated
      replicas: 2
    depends_on:
      kafka:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
  trends:
    build: ./trends
    command: --clickhouse.host clickhouse --clickhouse.port 9000
    ports:
      - 8082:8082
    depends_on:
      clickhouse:
        condition: service_healthy
  kafka:
    image: apache/kafka:latest
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://kafka:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: /opt/kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server localhost:9092 || exit 1
      interval: 1s
      timeout: 60s
      retries: 60
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - 8123:8123
      - 9000:9000
    volumes:
      - ./db/clickhouse:/docker-entrypoint-initdb.d
      - ~/.clickhouse/data/cmp:/var/lib/clickhouse/
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 1s
      timeout: 60s
      retries: 60
